// Move bytecode v6
module f77304f0b8426e09de5799104bfbc0a0efbbdaef95b5c172fb93522a19d5ee9e.struct_has_key {
use 0000000000000000000000000000000000000000000000000000000000000001::signer;


struct Nested1 has store, key {
	a: Simple,
	b: u64
}
struct Nested2<Ty0: store> has key {
	a: Ty0,
	b: u64
}
struct Nested3 has store, key {
	a: Simple,
	b: u64,
	c: Simple
}
struct Simple has copy, drop, store, key {
	f: u64,
	g: bool
}

public borrow1(Arg0: address): u64 {
B0:
	0: MoveLoc[0](Arg0: address)
	1: MutBorrowGlobal[3](Simple)
	2: StLoc[1](loc0: &mut Simple)
	3: CopyLoc[1](loc0: &mut Simple)
	4: ImmBorrowField[0](Simple.f: u64)
	5: ReadRef
	6: LdU64(2)
	7: Add
	8: CopyLoc[1](loc0: &mut Simple)
	9: MutBorrowField[0](Simple.f: u64)
	10: WriteRef
	11: MoveLoc[1](loc0: &mut Simple)
	12: ImmBorrowField[0](Simple.f: u64)
	13: ReadRef
	14: Ret
}
public borrow2(Arg0: address): u64 {
B0:
	0: MoveLoc[0](Arg0: address)
	1: MutBorrowGlobal[3](Simple)
	2: MutBorrowField[0](Simple.f: u64)
	3: StLoc[1](loc0: &mut u64)
	4: CopyLoc[1](loc0: &mut u64)
	5: ReadRef
	6: CopyLoc[1](loc0: &mut u64)
	7: WriteRef
	8: CopyLoc[1](loc0: &mut u64)
	9: ReadRef
	10: LdU64(2)
	11: Add
	12: CopyLoc[1](loc0: &mut u64)
	13: WriteRef
	14: MoveLoc[1](loc0: &mut u64)
	15: ReadRef
	16: Ret
}
public borrow3(Arg0: address): u64 {
L0:	loc1: &u64
L1:	loc2: u64
L2:	loc3: &Nested3
L3:	loc4: &Simple
B0:
	0: MoveLoc[0](Arg0: address)
	1: ImmBorrowGlobal[2](Nested3)
	2: StLoc[4](loc3: &Nested3)
	3: CopyLoc[4](loc3: &Nested3)
	4: ImmBorrowField[1](Nested3.a: Simple)
	5: StLoc[5](loc4: &Simple)
	6: MoveLoc[4](loc3: &Nested3)
	7: ImmBorrowField[2](Nested3.b: u64)
	8: ReadRef
	9: StLoc[3](loc2: u64)
	10: ImmBorrowLoc[3](loc2: u64)
	11: StLoc[2](loc1: &u64)
	12: MoveLoc[5](loc4: &Simple)
	13: ReadRef
	14: StLoc[1](loc0: Simple)
	15: ImmBorrowLoc[1](loc0: Simple)
	16: ImmBorrowField[0](Simple.f: u64)
	17: ReadRef
	18: MoveLoc[2](loc1: &u64)
	19: ReadRef
	20: Add
	21: Ret
}
public borrow4(Arg0: address) {
B0:
	0: MoveLoc[0](Arg0: address)
	1: MutBorrowGlobal[3](Simple)
	2: StLoc[1](loc0: &mut Simple)
	3: LdU64(1)
	4: LdTrue
	5: Pack[3](Simple)
	6: MoveLoc[1](loc0: &mut Simple)
	7: WriteRef
	8: Ret
}
entry public main(Arg0: &signer) {
B0:
	0: CopyLoc[0](Arg0: &signer)
	1: Call moveto2(&signer)
	2: MoveLoc[0](Arg0: &signer)
	3: Call moveto2(&signer)
	4: Ret
}
public moveto1(Arg0: &signer, Arg1: u64) {
B0:
	0: MoveLoc[0](Arg0: &signer)
	1: MoveLoc[1](Arg1: u64)
	2: LdU64(39)
	3: Add
	4: LdTrue
	5: Pack[3](Simple)
	6: MoveTo[3](Simple)
	7: Ret
}
public moveto2(Arg0: &signer) {
B0:
	0: MoveLoc[0](Arg0: &signer)
	1: LdU64(5)
	2: LdFalse
	3: Pack[3](Simple)
	4: LdU64(78)
	5: Pack[0](Nested1)
	6: MoveTo[0](Nested1)
	7: Ret
}
public moveto3(Arg0: &signer) {
B0:
	0: MoveLoc[0](Arg0: &signer)
	1: LdU64(5)
	2: LdFalse
	3: Pack[3](Simple)
	4: LdU64(34)
	5: Pack[0](Nested1)
	6: LdU64(9099)
	7: PackGeneric[0](Nested2<Nested1>)
	8: MoveToGeneric[0](Nested2<Nested1>)
	9: Ret
}
public moveto4(Arg0: &signer) {
L0:	loc1: Nested3
B0:
	0: LdU64(5)
	1: LdFalse
	2: Pack[3](Simple)
	3: StLoc[1](loc0: Simple)
	4: CopyLoc[1](loc0: Simple)
	5: LdU64(88)
	6: MoveLoc[1](loc0: Simple)
	7: Pack[2](Nested3)
	8: StLoc[2](loc1: Nested3)
	9: CopyLoc[0](Arg0: &signer)
	10: Call signer::address_of(&signer): address
	11: Pop
	12: CopyLoc[0](Arg0: &signer)
	13: Call signer::borrow_address(&signer): &address
	14: ReadRef
	15: Pop
	16: MoveLoc[0](Arg0: &signer)
	17: MoveLoc[2](loc1: Nested3)
	18: MoveTo[2](Nested3)
	19: Ret
}
}